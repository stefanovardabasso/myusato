@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    -o-border-radius: $radius;
    border-radius: $radius;
}

@mixin placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie);
}

@mixin line-height($font-size, $line-height: $font-size) {
    line-height: $line-height/$font-size;
}

@mixin box-sizing($box-model) {
    -webkit-box-sizing: $box-model;
    -moz-box-sizing: $box-model;
    -ms-box-sizing: $box-model;
    -o-box-sizing: $box-model;
    box-sizing: $box-model;
}

@mixin transition($transition...) {
    -webkit-transition: $transition;
    -moz-transition:    $transition;
    -ms-transition:    $transition;
    -o-transition:      $transition;
    transition:         $transition;
}

@mixin box-shadow($shadow) {
    -webkit-box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    -ms-box-shadow: $shadow;
    -o-box-shadow: $shadow;
    box-shadow: $shadow;
}

@mixin unmarkable{
    -webkit-user-select: none; /* Chrome/Safari */        
    -moz-user-select: none; /* Firefox */
    -ms-user-select: none; /* IE10+ */

    /* Rules below not implemented in browsers yet */
    -o-user-select: none;
    user-select: none;
}

@mixin appearance($appereance) {
    -webkit-appearance: $appereance;
    -moz-appearance: $appereance;
    -ms-appearance: $appereance;
    -o-appearance: $appereance;
    appearance: $appereance;
}

@mixin grayscale($value) {
    -webkit-filter: #{"grayscale(#{$value})"};
    -moz-filter: #{"grayscale(#{$value})"};
    filter:#{"grayscale(#{$value})"};
}

@mixin rotate($deg, $ie) {

    /* Safari */
    -webkit-transform: rotate($deg);

    /* Firefox */
    -moz-transform: rotate($deg);

    /* IE */
    -ms-transform: rotate($deg);

    /* Opera */
    -o-transform: rotate($deg);

    /* Internet Explorer */
    filter: progid:DXImageTransform.Microsoft.BasicImage($ie);

}

@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}


///
/// Generates a linear gradient for a given element with a fallback color.
///
/// Note: By default this linear-gradient-mixin encourages people to use the
/// latest CSS-syntax for gradients.
///
/// @author drublic
///
/// @link http://caniuse.com/#feat=css-gradients caniuse
/// @link https://drafts.csswg.org/css-images-3/#linear-gradients spec
///
/// @require helper-gradient-angle
///
/// @param {String | Angle} $direction [to bottom] - Either an angle value or any of `to bottom`, `to right`, `to top` or `to left`
/// @param {Color} $fallback [#ccc]
/// @param {Color} $from [#ccc]
/// @param {Color} $to [#aaa]
///
/// @output
/// ```css
///   background-color: <fallback>;
///   background-image: -webkit-gradient(linear, <direction - old converted>, from(<from>), to(<to>));
///   background-image: -webkit-linear-gradient(<direction - converted>, <from>, <to>);
///   background-image:         linear-gradient(<direction>, <from>, <to>);
/// ```
///
/// @example
///   .selector {
///     @include x-linear-gradient('to bottom', #ccc, #ddd, #bbb);
///   }
///
@mixin x-linear-gradient ($direction: 'to bottom', $fallback: #ccc, $from: #ccc, $to: #aaa) {

    $directions: helper-gradient-angle($direction);

    // Provide a fallback-color
    background-color: $fallback;

    // Cross-browser linear-gradients
    background-image: -webkit-gradient(linear, unquote(nth($directions, 2)), from($from), to($to)); // Android 2.1-3.0
    background-image: -webkit-linear-gradient(unquote(nth($directions, 1)), $from, $to);
    background-image:         linear-gradient(unquote($direction), $from, $to);
}

@mixin font-face($font-family, $url) {
	@font-face {
		font-family: '#{$font-family}';
		src: url('#{$url}.eot');
		src: url('#{$url}.eot?#iefix') format('embedded-opentype'),
		     url('#{$url}.woff') format('woff'),
		     url('#{$url}.woff2') format('woff2'),
		     url('#{$url}.ttf') format('truetype'),
		     url('#{$url}.svg') format('svg');
		font-weight: normal;
		font-style: normal;
	}
}